{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","textColor","backColor","mode","className","style","color","backgroundColor","id","type","Navbar","navColor","navTextColor","href","title","role","onClick","toggleMode","TextForm","useState","text","setText","disable","length","onChange","event","target","value","rows","console","log","toUpperCase","showAlert","toLowerCase","temp","i","newText","split","join","navigator","clipboard","writeText","filter","element","defaultProps","Alert","height","alert","msg","App","setmode","setAlert","message","setTimeout","theme","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95cbc4c5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    let textColor=\"black\"\r\n    let backColor=\"white\"\r\n\r\n    if(props.mode === \"dark\"){\r\n        backColor=\"#191919\";\r\n        textColor=\"white\";\r\n    }\r\n    else if(props.mode === \"green\"){\r\n        backColor=\"#198754\";\r\n        textColor=\"white\";\r\n    }\r\n    else if(props.mode === \"grey\"){\r\n        backColor=\"grey\";\r\n        textColor=\"white\";\r\n    }\r\n    else{\r\n        textColor=\"black\"\r\n        backColor=\"white\"\r\n    }\r\n    // if(props.mode === \"dark\"){\r\n    //     set{color: 'white', backgroundColor: \"#191919\"}({color:\"white\", backgroundColor:\"#191919\"})\r\n    // }\r\n\r\n    return (\r\n        <div className=\"conatainer\" style={{color: textColor, backgroundColor: backColor}}>\r\n            <h1 className=\"my-3 mx-3\">About this tool</h1>\r\n            <div className=\"accordion container\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" style={{color: textColor, backgroundColor: backColor}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Analyze Your Text\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{color: textColor, backgroundColor: backColor}} >\r\n                    You can analyze text and perform various actions to your text using this tool.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={{color: textColor, backgroundColor: backColor}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Developed using?\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{color: textColor, backgroundColor: backColor}} >\r\n                This tool is developed using the REACT.js, a very famous frontend component based framework.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={{color: textColor, backgroundColor: backColor}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Does this tool use a backend?\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{color: textColor, backgroundColor: backColor}} >\r\n                    This tool as of now does not use a backend for text formating or anyother task. It does all the text manipulation directing in your browser using javascript.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {PropTypes} from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    let navColor=\"light\";\r\n    let navTextColor=\"black\"\r\n    if(props.mode !== \"light\"){\r\n      navColor=\"dark\";\r\n      navTextColor=\"white\"\r\n    }\r\n    return (\r\n        <div>\r\n        <nav className={\"navbar navbar-expand-lg navbar-\"+ navColor +\" bg-\"+ navColor}>\r\n        <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" style={{color: navTextColor}} href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" style={{color: navTextColor}} href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={{color: navTextColor}} to=\"/about\">About</Link>\r\n              </li> */}\r\n            </ul>\r\n            \r\n            <div className=\"nav-item dropdown\">\r\n          <div className=\"nav-item mx-3 dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Themes\r\n          </div>\r\n            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <li className=\"dropdown-item\" id=\"light\" onClick={props.toggleMode}>Light</li>\r\n              <li className=\"dropdown-item\" id=\"dark\" onClick={props.toggleMode}>Dark</li>\r\n              <li className=\"dropdown-item\" id=\"green\" onClick={props.toggleMode}>Green</li>\r\n              <li className=\"dropdown-item\" id=\"grey\" onClick={props.toggleMode}>Grey</li>\r\n            </ul>\r\n           </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\n\r\nNavbar.defaultProps = {title: 'Title goes here'}","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    let disable = \"disabled\"\r\n    if(text.length!==0){\r\n        disable=\"\";\r\n    }\r\n    const handleUpClick = ()=>{\r\n        console.log('UpperCase was clicked!')\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"All letters set to upper-case!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"All letters set to lower-case!\", \"success\");\r\n    }\r\n\r\n    const handleAltClick = ()=>{\r\n        let temp = \"\"\r\n        for(let i=0;i<text.length;i++){\r\n            if(text[i]===text[i].toUpperCase()){\r\n                temp = temp+text[i].toLowerCase()\r\n            }\r\n            if(text[i] === text[i].toLowerCase()){\r\n                temp = temp+text[i].toUpperCase()\r\n            }\r\n        }\r\n        setText(temp)\r\n        props.showAlert(\"Alternate case action performed.\", \"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"Text copied to the clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[  ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed from the text.\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText(\"\")\r\n        props.showAlert(\"Text has been cleared!\", \"warning\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h2>Enter the text below to analyze!</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"my-box\" onChange={handleOnChange} value={text} rows=\"10\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-primary mx-2 my-2 ${disable}`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className={`btn btn-primary mx-2 my-2 ${disable}`} onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className={`btn btn-primary mx-2 my-2 ${disable}`} onClick={handleAltClick}>Convert to AlternateCase</button>\r\n            <button className={`btn btn-primary mx-2 my-2 ${disable}`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className={`btn btn-primary mx-2 my-2 ${disable}`} onClick={handleCopy}>Copy Text</button>\r\n            <button className={\"btn btn-danger mx-2 my-2 \"+disable} onClick={handleClearClick}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words, {text.length} characters.</p>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length * 0.008} minutes read.</p>\r\n            <h2>{text.length===0?\"Enter text to preview here...\":\"Preview\"}</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style={{height: \"60px\"}}> \r\n        {props.alert && \r\n        <div className=\"container\">\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{(props.alert.type).toUpperCase()}</strong>    {props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport {useState} from 'react';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() { \n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({msg: message, type: type});\n    setTimeout(()=>{\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = (event)=>{\n    let theme = event.target.id;\n    if(theme===\"light\"){\n      setmode(\"light\");\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n      showAlert(\"Light mode has been enabled.\", \"success\");\n    }\n    else if(theme===\"dark\"){  \n      setmode(\"dark\");\n      document.body.style.backgroundColor='#191919';\n      document.body.style.color='white';\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n    }\n    else if(theme==='green'){\n      setmode(\"green\");\n      document.body.style.backgroundColor='#198754';\n      document.body.style.color='white';\n      showAlert(\"Green mode has been enabled.\", \"success\");\n    }\n    else{      \n      setmode(\"grey\");\n      document.body.style.backgroundColor='grey';\n      document.body.style.color='white';\n      showAlert(\"Grey mode has been enabled.\", \"success\");\n    }\n  }\n\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text Manip\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n\n            <Route exact path=\"/\"> */}\n              <Alert alert={alert}/>\n              <TextForm showAlert={showAlert}/>\n            {/* </Route>\n        </Switch> */}\n              <About className=\"my-5\" mode={mode}/>\n\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}